{"version":3,"sources":["components/blender_card.tsx","components/sidebar.tsx","components/graph-data.tsx","components/graph.tsx","components/table-data.tsx","components/table.tsx","images/stackline_logo.svg","components/header.tsx","reducers/index.tsx","store/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["cardStyle","height","width","background","tagStyle","padding","marginTop","border","borderRadius","BlenderCard","props","subtitle1","subtitle","substring","subtitle2","tagsElement","tags","map","tag","style","Card","variant","src","image","marginInlineStart","margin","textAlign","title","fontSize","display","flexWrap","justifyContent","borderTop","borderBottom","color","Sidebar","GraphData","ResponsiveContainer","LineChart","data","JSON","parse","sales","top","right","left","bottom","XAxis","dataKey","tickFormatter","p","moment","format","interval","tickLine","Tooltip","CartesianGrid","strokeDasharray","stroke","Line","dot","strokeWidth","type","Graph","fontWeight","columns","name","selector","sortable","TableData","overflowY","pagination","Table","Header","stackline_logo","initialState","stringify","reducer","state","action","store","createStore","applyMiddleware","thunk","App","Grid","container","item","xs","console","log","marginLeft","position","getState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a98d1c8d.chunk.js","sourcesContent":["import Card from '@material-ui/core/Card';\r\n\r\nconst cardStyle = {\r\n    height: \"240px\", \r\n    width: \"250px\",\r\n    background: \"\",\r\n}\r\n\r\nconst tagStyle = {\r\n  padding: \"1px 9px 1px 9px\",\r\n  marginTop: \"8px\",\r\n  border: \"1px solid lightgray\",\r\n  borderRadius:\" 0.5em\"\r\n}\r\n\r\ntype BlenderCardProps = {\r\n  image: string;\r\n  subtitle: string;\r\n  title: string;\r\n  tags: string[];\r\n};\r\n\r\nconst BlenderCard = (props: BlenderCardProps) => {\r\n  const subtitle1 = props.subtitle.substring(0, 33);\r\n  const subtitle2 = props.subtitle.substring(33);\r\n  const tagsElement =\r\n      props.tags &&\r\n      props.tags.map((tag) => (\r\n        <span key={tag} style={tagStyle}>\r\n          {tag}\r\n        </span>\r\n      ));\r\n  return (\r\n    <Card style={cardStyle} variant=\"outlined\">\r\n        <img src={props.image} style={{width: \"100px\", marginInlineStart: \"73px\", marginTop: \"20px\"}}></img>\r\n        <h5 style={{margin: \"0px\", textAlign: \"center\"}}>{props.title}</h5>\r\n        <p style={{fontSize: \"11px\", textAlign: \"center\", margin: \"0px\"}}>{subtitle1}</p>\r\n        <p style={{fontSize: \"11px\", textAlign: \"center\", margin: \"0px\"}}>{subtitle2}</p>\r\n        <div style={{display: \"flex\",\r\n                     flexWrap: \"wrap\",\r\n                     padding: \"10px\",\r\n                     fontSize: \"10px\",\r\n                     justifyContent: \"space-between\",\r\n                     borderTop: \"1px solid #eee\",\r\n                     borderBottom: \"1px solid #eee\",\r\n                     color: \"#000\"}}>{tagsElement}</div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default BlenderCard;","import Card from '@material-ui/core/Card';\r\nimport BlenderCard from '../components/blender_card';\r\n\r\nconst cardStyle = {\r\n    height: \"1116px\", width: \"250px\"\r\n}\r\n\r\ntype SidebarProps = {\r\n    image: string;\r\n    subtitle: string;\r\n    title: string;\r\n    tags: string[];\r\n};\r\n\r\nconst Sidebar = (props: SidebarProps) => {\r\n  return (\r\n    <Card style={cardStyle}>\r\n        <BlenderCard image={props.image} subtitle={props.subtitle} title={props.title} tags={props.tags}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import Card from '@material-ui/core/Card';\r\nimport {LineChart, Line, XAxis, Tooltip, ResponsiveContainer, CartesianGrid} from 'recharts';\r\nimport moment from 'moment';\r\n\r\n\r\ntype GraphDataProps = {\r\n    sales: string;\r\n};  \r\n\r\nconst GraphData = (props: GraphDataProps) => {\r\n    return (\r\n        <Card style={{height: \"500px\",\r\n                      width: \"1150px\"}}>\r\n            <ResponsiveContainer>\r\n                    <LineChart data={JSON.parse(props.sales)}\r\n                               margin={{top: 5, right: 0, left: 15, bottom: 5}}>\r\n                        <XAxis dataKey=\"weekEnding\"\r\n                               tickFormatter={(p)=>moment(p).format('MMM')}\r\n                               interval={4}\r\n                               tickLine={true}\r\n                               />\r\n                        <Tooltip/>\r\n                        <CartesianGrid strokeDasharray=\"5\" stroke=\"#DFE2E6\" />\r\n                        <Line dot={false}\r\n                              strokeWidth={2}\r\n                              type=\"monotone\"\r\n                              dataKey=\"retailSales\"\r\n                              stroke=\"#06B4E9\"/>\r\n                        <Line dot={false}\r\n                              strokeWidth={2}\r\n                              type=\"monotone\"\r\n                              dataKey=\"wholesaleSales\"\r\n                              stroke=\"#848889\"/>\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default GraphData;","import Card from '@material-ui/core/Card';\r\nimport GraphData from './graph-data';\r\n\r\nconst cardStyle = {\r\n    height: \"550px\", width: \"1150px\",\r\n}\r\n\r\ntype GraphProps = {\r\n  sales: string;\r\n};  \r\n\r\nconst Graph = (props: GraphProps) => {\r\n    return (\r\n      <Card style={cardStyle}>\r\n        <p style={{marginInlineStart: \"15px\", fontWeight: \"bold\"}}>Retail Sales</p>\r\n        <GraphData sales={props.sales}/>\r\n      </Card>\r\n    );\r\n}\r\n\r\nexport default Graph;\r\n\r\n","import Card from '@material-ui/core/Card';\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nconst columns = [\r\n    {\r\n      name: \"WEEK ENDING\",\r\n      selector: \"weekEnding\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"RETAIL SALES\",\r\n      selector: \"retailSales\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"WHOLESALE SALES\",\r\n      selector: \"wholesaleSales\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"UNITS SOLD\",\r\n      selector: \"unitsSold\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"RETAILER MARGIN\",\r\n      selector: \"retailerMargin\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n  ];\r\n\r\n\r\ntype TableDataProps = {\r\n    sales: string;\r\n};  \r\n\r\n\r\nconst TableData = (props: TableDataProps) => {\r\n    return (\r\n        <Card style={{height: \"550px\",\r\n                      width: \"1150px\",\r\n                      overflowY: \"scroll\",\r\n                      marginTop: \"-50px\"}}>\r\n            <DataTable\r\n            title=\"\"\r\n            columns={columns}\r\n            data={JSON.parse(props.sales)}\r\n            pagination={true}/>\r\n        </Card>\r\n      );\r\n}\r\n\r\nexport default TableData;","import Card from '@material-ui/core/Card';\r\nimport TableData from './table-data';\r\n\r\nconst cardStyle = {\r\n    height: \"500px\", width: \"1150px\",\r\n}\r\n\r\n\r\ntype TableProps = {\r\n  sales: string;\r\n};  \r\n\r\nconst Table = (props: TableProps) => {\r\n    return (\r\n      <Card style={cardStyle}>\r\n        <TableData sales={props.sales}/>\r\n      </Card>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n\r\n","export default __webpack_public_path__ + \"static/media/stackline_logo.5935081b.svg\";","import Card from '@material-ui/core/Card';\r\nimport stackline_logo from '../images/stackline_logo.svg';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div>\r\n            <Card style={{background: \"#163656\", height: \"50px\"}}>\r\n                <img src={stackline_logo} style={{width: \"100px\", padding: \"15px\"}}></img>\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import * as actionTypes from '../types/actionTypes';\r\nimport data from '../util/json_data.json';\r\n\r\nconst initialState: SalesState = {\r\n    sales: {\r\n        sales: JSON.stringify(data[0].sales)\r\n    }\r\n};\r\n\r\n\r\nconst reducer = (\r\n    state: SalesState = initialState,\r\n    action: SalesAction\r\n  ): SalesState => {\r\n    switch (action.type) {\r\n      case actionTypes.SALES:\r\n    }\r\n    return state;\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import { createStore, applyMiddleware, Store } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducer from '../reducers/index';\r\n\r\n\r\nconst store: Store<SalesState, SalesAction> & {\r\n    dispatch: DispatchType\r\n  } = createStore(reducer, applyMiddleware(thunk));\r\n\r\n\r\nexport default store;","import './App.css';\nimport data from './util/json_data.json';\nimport Sidebar from './components/sidebar';\nimport Graph from './components/graph';\nimport Table from './components/table';\nimport Grid from '@material-ui/core/Grid';\nimport Header from './components/header';\nimport store from './store/index';\n\n\nfunction getImage() {\n  console.log(data[0].image);\n  return data[0].image;\n}\n\nfunction getSubtitle() {\n  console.log(data[0].subtitle);\n  return data[0].subtitle;\n}\n\nfunction getTags() {\n  console.log(data[0].tags)\n  return data[0].tags;\n}\n\nfunction getTitle() {\n  console.log(data[0].title);\n  return data[0].title;\n}\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <Grid container style={{padding: \"15px\"}}>\n        <Grid item xs>\n          <Sidebar image={getImage()} subtitle={getSubtitle()} title={getTitle()} tags={getTags()}/>\n        </Grid>\n        <Grid item xs style={{marginLeft: \"270px\", position: \"absolute\"}}>\n          <Grid item xs={12}>\n            <Graph sales={store.getState().sales.sales}/>\n          </Grid>\n          <br/>\n          <br/>\n          <br/>\n          <Grid item xs={12}>\n            <Table sales={store.getState().sales.sales}/>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from './store/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}